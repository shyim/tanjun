{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://github.com/shyim/tanjun/internal/config/project-config",
  "$ref": "#/$defs/ProjectConfig",
  "$defs": {
    "Config": {
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "bun"
              }
            }
          },
          "then": {
            "properties": {
              "settings": {
                "properties": {
                  "packages": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "description": "Allows installation of additional packages"
                  },
                  "env": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "type": "object",
                    "description": "Default environment variables"
                  },
                  "port": {
                    "type": "integer",
                    "description": "Application Listing Port",
                    "default": "3000"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "go"
              }
            }
          },
          "then": {
            "properties": {
              "settings": {
                "properties": {
                  "packages": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "description": "Allows installation of additional packages"
                  },
                  "env": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "type": "object",
                    "description": "Default environment variables"
                  },
                  "port": {
                    "type": "integer",
                    "description": "Application Listing Port",
                    "default": "3000"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "node"
              }
            }
          },
          "then": {
            "properties": {
              "settings": {
                "properties": {
                  "packages": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "description": "Allows installation of additional packages"
                  },
                  "env": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "type": "object",
                    "description": "Default environment variables"
                  },
                  "port": {
                    "type": "integer",
                    "description": "Application Listing Port",
                    "default": "3000"
                  },
                  "version": {
                    "type": "string",
                    "enum": [
                      "20",
                      "22",
                      "23"
                    ],
                    "description": "Node version to use, when empty automatically detected by package.json"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "php"
              }
            }
          },
          "then": {
            "properties": {
              "settings": {
                "properties": {
                  "packages": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "description": "Allows installation of additional packages"
                  },
                  "env": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "type": "object",
                    "description": "Default environment variables"
                  },
                  "version": {
                    "type": "string",
                    "enum": [
                      "8.1",
                      "8.2",
                      "8.3"
                    ],
                    "description": "PHP Version (default detect from composer.json)"
                  },
                  "variant": {
                    "type": "string",
                    "enum": [
                      "nginx",
                      "caddy",
                      "frankenphp"
                    ],
                    "description": "Server Variant",
                    "default": "nginx"
                  },
                  "ini": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "type": "object",
                    "description": "PHP Ini configurations"
                  },
                  "extensions": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "description": "Additional PHP extensions to install"
                  }
                },
                "type": "object"
              }
            }
          }
        }
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "bun",
            "go",
            "node",
            "php"
          ]
        }
      },
      "type": "object",
      "required": [
        "type"
      ]
    },
    "ProjectApp": {
      "properties": {
        "env": {
          "additionalProperties": {
            "$ref": "#/$defs/ProjectEnvironment"
          },
          "type": "object"
        },
        "initial_secrets": {
          "additionalProperties": {
            "$ref": "#/$defs/ProjectInitialSecrets"
          },
          "type": "object"
        },
        "secrets": {
          "properties": {
            "from_env": {
              "$ref": "#/$defs/ProjectFromEnv"
            },
            "from_env_file": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "onepassword": {
              "properties": {
                "items": {
                  "items": {
                    "$ref": "#/$defs/ProjectOnePassword"
                  },
                  "type": "array"
                }
              },
              "additionalProperties": false,
              "type": "object"
            }
          },
          "additionalProperties": false,
          "type": "object"
        },
        "mounts": {
          "additionalProperties": {
            "$ref": "#/$defs/ProjectMount"
          },
          "type": "object"
        },
        "workers": {
          "additionalProperties": {
            "$ref": "#/$defs/ProjectWorker"
          },
          "type": "object"
        },
        "cronjobs": {
          "items": {
            "$ref": "#/$defs/ProjectCronjob"
          },
          "type": "array"
        },
        "hooks": {
          "properties": {
            "deploy": {
              "type": "string"
            },
            "post_deploy": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "ProjectConfig": {
      "properties": {
        "name": {
          "type": "string"
        },
        "image": {
          "type": "string"
        },
        "keep_versions": {
          "type": "integer"
        },
        "build": {
          "properties": {
            "build_pack": {
              "$ref": "#/$defs/Config"
            },
            "dockerfile": {
              "type": "string"
            },
            "remote_build": {
              "type": "boolean"
            },
            "labels": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            "args": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            "passthroughs_ssh_socket": {
              "type": "boolean"
            },
            "secrets": {
              "properties": {
                "from_env": {
                  "$ref": "#/$defs/ProjectFromEnv"
                },
                "from_stored": {
                  "$ref": "#/$defs/ProjectFromEnv"
                },
                "onepassword": {
                  "properties": {
                    "items": {
                      "items": {
                        "$ref": "#/$defs/ProjectOnePassword"
                      },
                      "type": "array"
                    }
                  },
                  "additionalProperties": false,
                  "type": "object"
                }
              },
              "additionalProperties": false,
              "type": "object"
            }
          },
          "additionalProperties": false,
          "type": "object"
        },
        "server": {
          "$ref": "#/$defs/ProjectServer"
        },
        "proxy": {
          "$ref": "#/$defs/ProjectProxy"
        },
        "app": {
          "$ref": "#/$defs/ProjectApp"
        },
        "services": {
          "additionalProperties": {
            "$ref": "#/$defs/ProjectService"
          },
          "type": "object"
        }
      },
      "additionalProperties": false,
      "type": "object",
      "required": [
        "name",
        "image",
        "server"
      ]
    },
    "ProjectCronjob": {
      "properties": {
        "name": {
          "type": "string"
        },
        "schedule": {
          "type": "string"
        },
        "command": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "type": "object",
      "required": [
        "name",
        "schedule",
        "command"
      ]
    },
    "ProjectEnvironment": {
      "oneOf": [
        {
          "required": [
            "value"
          ],
          "title": "value"
        },
        {
          "required": [
            "expr"
          ],
          "title": "expr"
        }
      ],
      "properties": {
        "value": {
          "type": "string"
        },
        "expr": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "ProjectFromEnv": {
      "additionalProperties": {
        "oneOf": [
          {
            "type": "string"
          },
          {
            "type": "null"
          }
        ]
      },
      "type": "object"
    },
    "ProjectInitialSecrets": {
      "properties": {
        "expr": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "type": "object",
      "required": [
        "expr"
      ]
    },
    "ProjectMount": {
      "properties": {
        "path": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "type": "object",
      "required": [
        "path"
      ]
    },
    "ProjectOnePassword": {
      "properties": {
        "name": {
          "type": "string"
        },
        "vault": {
          "type": "string"
        },
        "omit_fields": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "remap_fields": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        }
      },
      "additionalProperties": false,
      "type": "object",
      "required": [
        "name",
        "vault"
      ]
    },
    "ProjectProxy": {
      "properties": {
        "host": {
          "type": "string"
        },
        "app_port": {
          "type": "integer"
        },
        "healthcheck": {
          "properties": {
            "interval": {
              "type": "integer"
            },
            "timeout": {
              "type": "integer"
            },
            "path": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object"
        },
        "response_timeout": {
          "type": "integer"
        },
        "ssl": {
          "type": "boolean"
        },
        "buffering": {
          "properties": {
            "requests": {
              "type": "boolean"
            },
            "responses": {
              "type": "boolean"
            },
            "max_request_body": {
              "type": "integer"
            },
            "max_response_body": {
              "type": "integer"
            },
            "memory": {
              "type": "integer"
            }
          },
          "additionalProperties": false,
          "type": "object"
        }
      },
      "additionalProperties": false,
      "type": "object",
      "required": [
        "host"
      ]
    },
    "ProjectServer": {
      "properties": {
        "address": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "port": {
          "type": "integer"
        }
      },
      "additionalProperties": false,
      "type": "object",
      "required": [
        "address"
      ]
    },
    "ProjectService": {
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "memcached:latest"
              }
            }
          },
          "then": {
            "properties": {
              "settings": {
                "properties": {
                  "memory-limit": {
                    "type": "string",
                    "description": "The maximum amount of memory the server is allowed to use for item storage."
                  },
                  "max-connections": {
                    "type": "integer",
                    "description": "The maximum number of simultaneous connections to the server."
                  }
                },
                "type": "object"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "mysql:8.0"
              }
            }
          },
          "then": {
            "properties": {
              "settings": {
                "properties": {
                  "sql_mode": {
                    "type": "string"
                  },
                  "log_bin_trust_function_creators": {
                    "type": "string"
                  },
                  "binlog_cache_size": {
                    "type": "string"
                  },
                  "join_buffer_size": {
                    "type": "string"
                  },
                  "innodb_log_file_size": {
                    "type": "string"
                  },
                  "innodb_buffer_pool_size": {
                    "type": "string"
                  },
                  "innodb_buffer_pool_instances": {
                    "type": "string"
                  },
                  "group_concat_max_len": {
                    "type": "string"
                  },
                  "max_connections": {
                    "type": "string"
                  },
                  "max_allowed_packet": {
                    "type": "string"
                  },
                  "max_binlog_size": {
                    "type": "string"
                  },
                  "binlog_expire_logs_seconds": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "mysql:8.4"
              }
            }
          },
          "then": {
            "properties": {
              "settings": {
                "properties": {
                  "sql_mode": {
                    "type": "string"
                  },
                  "log_bin_trust_function_creators": {
                    "type": "string"
                  },
                  "binlog_cache_size": {
                    "type": "string"
                  },
                  "join_buffer_size": {
                    "type": "string"
                  },
                  "innodb_log_file_size": {
                    "type": "string"
                  },
                  "innodb_buffer_pool_size": {
                    "type": "string"
                  },
                  "innodb_buffer_pool_instances": {
                    "type": "string"
                  },
                  "group_concat_max_len": {
                    "type": "string"
                  },
                  "max_connections": {
                    "type": "string"
                  },
                  "max_allowed_packet": {
                    "type": "string"
                  },
                  "max_binlog_size": {
                    "type": "string"
                  },
                  "binlog_expire_logs_seconds": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "opensearch:2.17.1"
              }
            }
          },
          "then": {
            "properties": {
              "settings": {
                "properties": {},
                "type": "object"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "postgres:17"
              }
            }
          },
          "then": {
            "properties": {
              "settings": {
                "properties": {
                  "max_connections": {
                    "type": "string"
                  },
                  "shared_buffers": {
                    "type": "string"
                  },
                  "effective_cache_size": {
                    "type": "string"
                  },
                  "maintenance_work_mem": {
                    "type": "string"
                  },
                  "checkpoint_completion_target": {
                    "type": "string"
                  },
                  "wal_buffers": {
                    "type": "string"
                  },
                  "default_statistics_target": {
                    "type": "string"
                  },
                  "random_page_cost": {
                    "type": "string"
                  },
                  "effective_io_concurrency": {
                    "type": "string"
                  },
                  "work_mem": {
                    "type": "string"
                  },
                  "min_wal_size": {
                    "type": "string"
                  },
                  "max_wal_size": {
                    "type": "string"
                  },
                  "max_worker_processes": {
                    "type": "string"
                  },
                  "max_parallel_workers_per_gather": {
                    "type": "string"
                  },
                  "max_parallel_workers": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "postgres:16"
              }
            }
          },
          "then": {
            "properties": {
              "settings": {
                "properties": {
                  "max_connections": {
                    "type": "string"
                  },
                  "shared_buffers": {
                    "type": "string"
                  },
                  "effective_cache_size": {
                    "type": "string"
                  },
                  "maintenance_work_mem": {
                    "type": "string"
                  },
                  "checkpoint_completion_target": {
                    "type": "string"
                  },
                  "wal_buffers": {
                    "type": "string"
                  },
                  "default_statistics_target": {
                    "type": "string"
                  },
                  "random_page_cost": {
                    "type": "string"
                  },
                  "effective_io_concurrency": {
                    "type": "string"
                  },
                  "work_mem": {
                    "type": "string"
                  },
                  "min_wal_size": {
                    "type": "string"
                  },
                  "max_wal_size": {
                    "type": "string"
                  },
                  "max_worker_processes": {
                    "type": "string"
                  },
                  "max_parallel_workers_per_gather": {
                    "type": "string"
                  },
                  "max_parallel_workers": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "postgres:15"
              }
            }
          },
          "then": {
            "properties": {
              "settings": {
                "properties": {
                  "max_connections": {
                    "type": "string"
                  },
                  "shared_buffers": {
                    "type": "string"
                  },
                  "effective_cache_size": {
                    "type": "string"
                  },
                  "maintenance_work_mem": {
                    "type": "string"
                  },
                  "checkpoint_completion_target": {
                    "type": "string"
                  },
                  "wal_buffers": {
                    "type": "string"
                  },
                  "default_statistics_target": {
                    "type": "string"
                  },
                  "random_page_cost": {
                    "type": "string"
                  },
                  "effective_io_concurrency": {
                    "type": "string"
                  },
                  "work_mem": {
                    "type": "string"
                  },
                  "min_wal_size": {
                    "type": "string"
                  },
                  "max_wal_size": {
                    "type": "string"
                  },
                  "max_worker_processes": {
                    "type": "string"
                  },
                  "max_parallel_workers_per_gather": {
                    "type": "string"
                  },
                  "max_parallel_workers": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "postgres:14"
              }
            }
          },
          "then": {
            "properties": {
              "settings": {
                "properties": {
                  "max_connections": {
                    "type": "string"
                  },
                  "shared_buffers": {
                    "type": "string"
                  },
                  "effective_cache_size": {
                    "type": "string"
                  },
                  "maintenance_work_mem": {
                    "type": "string"
                  },
                  "checkpoint_completion_target": {
                    "type": "string"
                  },
                  "wal_buffers": {
                    "type": "string"
                  },
                  "default_statistics_target": {
                    "type": "string"
                  },
                  "random_page_cost": {
                    "type": "string"
                  },
                  "effective_io_concurrency": {
                    "type": "string"
                  },
                  "work_mem": {
                    "type": "string"
                  },
                  "min_wal_size": {
                    "type": "string"
                  },
                  "max_wal_size": {
                    "type": "string"
                  },
                  "max_worker_processes": {
                    "type": "string"
                  },
                  "max_parallel_workers_per_gather": {
                    "type": "string"
                  },
                  "max_parallel_workers": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "rabbitmq:4"
              }
            }
          },
          "then": {
            "properties": {
              "settings": {
                "properties": {},
                "type": "object"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "valkey:7.2"
              }
            }
          },
          "then": {
            "properties": {
              "settings": {
                "properties": {
                  "maxmemory": {
                    "type": "string",
                    "description": "The value can be an absolute number (bytes), a percentage of the available memory, or a percentage of the memory limit."
                  },
                  "maxmemory-policy": {
                    "type": "string",
                    "enum": [
                      "allkeys-lru",
                      "allkeys-lfu",
                      "allkeys-random",
                      "volatile-lru",
                      "volatile-lfu",
                      "volatile-random",
                      "volatile-ttl",
                      "noeviction"
                    ],
                    "description": "How Valkey will select what to remove when maxmemory is reached. "
                  },
                  "appendonly": {
                    "type": "string",
                    "enum": [
                      "yes",
                      "no"
                    ],
                    "description": "By default, Valkey will not persist data to disk. "
                  },
                  "save": {
                    "type": "string",
                    "description": "Save the DB to disk."
                  }
                },
                "type": "object"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "valkey:8.0"
              }
            }
          },
          "then": {
            "properties": {
              "settings": {
                "properties": {
                  "maxmemory": {
                    "type": "string",
                    "description": "The value can be an absolute number (bytes), a percentage of the available memory, or a percentage of the memory limit."
                  },
                  "maxmemory-policy": {
                    "type": "string",
                    "enum": [
                      "allkeys-lru",
                      "allkeys-lfu",
                      "allkeys-random",
                      "volatile-lru",
                      "volatile-lfu",
                      "volatile-random",
                      "volatile-ttl",
                      "noeviction"
                    ],
                    "description": "How Valkey will select what to remove when maxmemory is reached. "
                  },
                  "appendonly": {
                    "type": "string",
                    "enum": [
                      "yes",
                      "no"
                    ],
                    "description": "By default, Valkey will not persist data to disk. "
                  },
                  "save": {
                    "type": "string",
                    "description": "Save the DB to disk."
                  }
                },
                "type": "object"
              }
            }
          }
        }
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "memcached:latest",
            "mysql:8.0",
            "mysql:8.4",
            "opensearch:2.17.1",
            "postgres:17",
            "postgres:16",
            "postgres:15",
            "postgres:14",
            "rabbitmq:4",
            "valkey:7.2",
            "valkey:8.0"
          ]
        }
      },
      "type": "object",
      "required": [
        "type"
      ]
    },
    "ProjectWorker": {
      "properties": {
        "command": {
          "type": "string"
        },
        "replicas": {
          "type": "integer"
        }
      },
      "additionalProperties": false,
      "type": "object"
    }
  }
}
